CREATE PROCEDURE [dbo].[ETL_MergeTemp_BigTables]
	@ETLId INT,
	@LastModifiedTime DateTime
AS
	--	if(exists(select 1 from [QuarterlyUsageSummary_temp]))
	--begin
	--	truncate table [QuarterlyUsageSummary]
	--	insert into [QuarterlyUsageSummary] select * from [QuarterlyUsageSummary_temp]
	--end
	-- Merge by Insert and Update
    MERGE [dbo].QuarterlyUsageSummary AS target
    USING (SELECT * FROM QuarterlyUsageSummary_temp WHERE [ModifiedOn] >= @LastModifiedTime) 
		AS source ([Id]
				  ,[EnrollmentId]
				  ,[Month]
				  ,[BeginBalance]
				  ,[NewPurchases]
				  ,[SIECredit]
				  ,[PromoCredit]
				  ,[Utilized]
				  ,[EndBalance]
				  ,[ChargesBilledSeparately]
				  ,[Overage]
				  ,[CreatedOn]
				  ,[ModifiedOn])
				ON (target.[Id] = source.[Id])    
	-- MATCHED
	WHEN MATCHED THEN 
        UPDATE SET [Id]=	source.[Id]
				  ,[EnrollmentId]=	source.[EnrollmentId]
				  ,[Month]=	source.[Month]
				  ,[BeginBalance]=	source.[BeginBalance]
				  ,[NewPurchases]=	source.[NewPurchases]
				  ,[SIECredit]=	source.[SIECredit]
				  ,[PromoCredit]=	source.[PromoCredit]
				  ,[Utilized]=	source.[Utilized]
				  ,[EndBalance]=	source.[EndBalance]
				  ,[ChargesBilledSeparately]=	source.[ChargesBilledSeparately]
				  ,[Overage]=	source.[Overage]
				  ,[CreatedOn]=	source.[CreatedOn]
				  ,[ModifiedOn]=	source.[ModifiedOn]
	-- NOT MATCHED
	WHEN NOT MATCHED THEN
    INSERT ([Id]
			,[EnrollmentId]
			,[Month]
			,[BeginBalance]
			,[NewPurchases]
			,[SIECredit]
			,[PromoCredit]
			,[Utilized]
			,[EndBalance]
			,[ChargesBilledSeparately]
			,[Overage]
			,[CreatedOn]
			,[ModifiedOn])
    VALUES (source.[Id]
			,source.[EnrollmentId]
			,source.[Month]
			,source.[BeginBalance]
			,source.[NewPurchases]
			,source.[SIECredit]
			,source.[PromoCredit]
			,source.[Utilized]
			,source.[EndBalance]
			,source.[ChargesBilledSeparately]
			,source.[Overage]
			,source.[CreatedOn]
			,source.[ModifiedOn]
			);

	----------------------------
	--	if(exists(select 1 from [MonthlyCommitmentPurchases_temp]))
	--begin
	--	truncate table [MonthlyCommitmentPurchases]
	--	insert into [MonthlyCommitmentPurchases] select * from [MonthlyCommitmentPurchases_temp]
	--end
	--------------------------
	-- Merge by Insert and Update
    MERGE [dbo].MonthlyCommitmentPurchases AS target
    USING (SELECT * FROM MonthlyCommitmentPurchases_temp) 
		AS source ([EDWSourceExtractID]
					,[EDWFirstInserted]
					,[EDWExtractGrouping]
					,[ActualQuantityOrdered]
					,[Month]
					,[EDWLastUpdated]
					,[EDWSourceSystemID]
					,[BillableItemPriceId]
					,[EDWProcessID]
					,[MonthlyPurchase]
					,[EDWIsDeletedFlag]
					,[Id]
					,[PurchaseOrderLineItemId])
				ON (target.[Id] = source.[Id])    
	-- MATCHED
	WHEN MATCHED THEN 
        UPDATE SET	[EDWSourceExtractID]=	source.[EDWSourceExtractID]
					,[EDWFirstInserted]=	source.[EDWFirstInserted]
					,[EDWExtractGrouping]=	source.[EDWExtractGrouping]
					,[ActualQuantityOrdered]=	source.[ActualQuantityOrdered]
					,[Month]=	source.[Month]
					,[EDWLastUpdated]=	source.[EDWLastUpdated]
					,[EDWSourceSystemID]=	source.[EDWSourceSystemID]
					,[BillableItemPriceId]=	source.[BillableItemPriceId]
					,[EDWProcessID]=	source.[EDWProcessID]
					,[MonthlyPurchase]=	source.[MonthlyPurchase]
					,[EDWIsDeletedFlag]=	source.[EDWIsDeletedFlag]
					,[Id]=	source.[Id]
					,[PurchaseOrderLineItemId]=	source.[PurchaseOrderLineItemId]

	-- NOT MATCHED
	WHEN NOT MATCHED THEN
    INSERT ([EDWSourceExtractID]
			,[EDWFirstInserted]
			,[EDWExtractGrouping]
			,[ActualQuantityOrdered]
			,[Month]
			,[EDWLastUpdated]
			,[EDWSourceSystemID]
			,[BillableItemPriceId]
			,[EDWProcessID]
			,[MonthlyPurchase]
			,[EDWIsDeletedFlag]
			,[Id]
			,[PurchaseOrderLineItemId])
    VALUES (source.[EDWSourceExtractID]
			,source.[EDWFirstInserted]
			,source.[EDWExtractGrouping]
			,source.[ActualQuantityOrdered]
			,source.[Month]
			,source.[EDWLastUpdated]
			,source.[EDWSourceSystemID]
			,source.[BillableItemPriceId]
			,source.[EDWProcessID]
			,source.[MonthlyPurchase]
			,source.[EDWIsDeletedFlag]
			,source.[Id]
			,source.[PurchaseOrderLineItemId]
			);

	--if(exists(select 1 from [MonthlyItemCharges_temp]))
	--begin
	--	truncate table [MonthlyItemCharges]
	--	insert into [MonthlyItemCharges] select * from [MonthlyItemCharges_temp]
	--end
	------------------------
    MERGE [dbo].MonthlyItemCharges AS target
    USING (SELECT * FROM MonthlyItemCharges_temp WHERE [ModifiedOn] >= @LastModifiedTime) 
		AS source ([StatusId]
					,[EDWLastUpdated]
					,[CommitmentResourceQty]
					,[ItemCharges]
					,[CommitmentPriceId]
					,[PriceType]
					,[EDWIsDeletedFlag]
					,[EDWProcessID]
					,[Id]
					,[ConsumptionPriceId]
					,[BillingMonth]
					,[CreatedOn]
					,[ConsumptionUnitsQty]
					,[EDWFirstInserted]
					,[InvoiceId]
					,[EDWExtractGrouping]
					,[EDWSourceExtractID]
					,[BillableItemId]
					,[CommitmentUnitsQty]
					,[ConsumptionResourceQty]
					,[EDWSourceSystemID]
					,[ModifiedOn])
				ON (target.[Id] = source.[Id])    
	-- MATCHED
	WHEN MATCHED THEN 
        UPDATE SET	[StatusId]=	source.[StatusId]
					,[EDWLastUpdated]=	source.[EDWLastUpdated]
					,[CommitmentResourceQty]=	source.[CommitmentResourceQty]
					,[ItemCharges]=	source.[ItemCharges]
					,[CommitmentPriceId]=	source.[CommitmentPriceId]
					,[PriceType]=	source.[PriceType]
					,[EDWIsDeletedFlag]=	source.[EDWIsDeletedFlag]
					,[EDWProcessID]=	source.[EDWProcessID]
					,[Id]=	source.[Id]
					,[ConsumptionPriceId]=	source.[ConsumptionPriceId]
					,[BillingMonth]=	source.[BillingMonth]
					,[CreatedOn]=	source.[CreatedOn]
					,[ConsumptionUnitsQty]=	source.[ConsumptionUnitsQty]
					,[EDWFirstInserted]=	source.[EDWFirstInserted]
					,[InvoiceId]=	source.[InvoiceId]
					,[EDWExtractGrouping]=	source.[EDWExtractGrouping]
					,[EDWSourceExtractID]=	source.[EDWSourceExtractID]
					,[BillableItemId]=	source.[BillableItemId]
					,[CommitmentUnitsQty]=	source.[CommitmentUnitsQty]
					,[ConsumptionResourceQty]=	source.[ConsumptionResourceQty]
					,[EDWSourceSystemID]=	source.[EDWSourceSystemID]
					,[ModifiedOn]=	source.[ModifiedOn]

	-- NOT MATCHED
	WHEN NOT MATCHED THEN
    INSERT ([StatusId]
			,[EDWLastUpdated]
			,[CommitmentResourceQty]
			,[ItemCharges]
			,[CommitmentPriceId]
			,[PriceType]
			,[EDWIsDeletedFlag]
			,[EDWProcessID]
			,[Id]
			,[ConsumptionPriceId]
			,[BillingMonth]
			,[CreatedOn]
			,[ConsumptionUnitsQty]
			,[EDWFirstInserted]
			,[InvoiceId]
			,[EDWExtractGrouping]
			,[EDWSourceExtractID]
			,[BillableItemId]
			,[CommitmentUnitsQty]
			,[ConsumptionResourceQty]
			,[EDWSourceSystemID]
			,[ModifiedOn])
    VALUES (source.[StatusId]
			,source.[EDWLastUpdated]
			,source.[CommitmentResourceQty]
			,source.[ItemCharges]
			,source.[CommitmentPriceId]
			,source.[PriceType]
			,source.[EDWIsDeletedFlag]
			,source.[EDWProcessID]
			,source.[Id]
			,source.[ConsumptionPriceId]
			,source.[BillingMonth]
			,source.[CreatedOn]
			,source.[ConsumptionUnitsQty]
			,source.[EDWFirstInserted]
			,source.[InvoiceId]
			,source.[EDWExtractGrouping]
			,source.[EDWSourceExtractID]
			,source.[BillableItemId]
			,source.[CommitmentUnitsQty]
			,source.[ConsumptionResourceQty]
			,source.[EDWSourceSystemID]
			,source.[ModifiedOn]
			);

	--if(exists(select 1 from [BillableItemPrice_temp]))
	--begin
	--	truncate table [BillableItemPrice]
	--	insert into [BillableItemPrice] select * from [BillableItemPrice_temp]
	--end
	--------------------------
    MERGE [dbo].BillableItemPrice AS target
    USING (SELECT * FROM BillableItemPrice_temp  WHERE [ModifiedOn] >= @LastModifiedTime) 
		AS source ([PartNumber]
					,[OriginalPrice]
					,[NormalizedPrice]
					,[StartsOn]
					,[EDWSourceSystemID]
					,[BillableItemId]
					,[EDWLastUpdated]
					,[ModifiedOn]
					,[Price]
					,[AdjustmentType]
					,[Comments]
					,[SourceTypeId]
					,[EDWIsDeletedFlag]
					,[EnrollmentId]
					,[CreatedOn]
					,[EndsOn]
					,[EDWProcessID]
					,[TierType]
					,[ModifiedBy]
					,[Id]
					,[EDWFirstInserted]
					,[CurrencyId]
					,[EDWSourceExtractID]
					,[SourceKey]
					,[BillableItemType]
					,[EDWExtractGrouping]
					,[CreatedBy])
				ON (target.[Id] = source.[Id])    
	-- MATCHED
	WHEN MATCHED THEN 
        UPDATE SET	[PartNumber]=	source.[PartNumber]
					,[OriginalPrice]=	source.[OriginalPrice]
					,[NormalizedPrice]=	source.[NormalizedPrice]
					,[StartsOn]=	source.[StartsOn]
					,[EDWSourceSystemID]=	source.[EDWSourceSystemID]
					,[BillableItemId]=	source.[BillableItemId]
					,[EDWLastUpdated]=	source.[EDWLastUpdated]
					,[ModifiedOn]=	source.[ModifiedOn]
					,[Price]=	source.[Price]
					,[AdjustmentType]=	source.[AdjustmentType]
					,[Comments]=	source.[Comments]
					,[SourceTypeId]=	source.[SourceTypeId]
					,[EDWIsDeletedFlag]=	source.[EDWIsDeletedFlag]
					,[EnrollmentId]=	source.[EnrollmentId]
					,[CreatedOn]=	source.[CreatedOn]
					,[EndsOn]=	source.[EndsOn]
					,[EDWProcessID]=	source.[EDWProcessID]
					,[TierType]=	source.[TierType]
					,[ModifiedBy]=	source.[ModifiedBy]
					,[Id]=	source.[Id]
					,[EDWFirstInserted]=	source.[EDWFirstInserted]
					,[CurrencyId]=	source.[CurrencyId]
					,[EDWSourceExtractID]=	source.[EDWSourceExtractID]
					,[SourceKey]=	source.[SourceKey]
					,[BillableItemType]=	source.[BillableItemType]
					,[EDWExtractGrouping]=	source.[EDWExtractGrouping]
					,[CreatedBy]=	source.[CreatedBy]

	-- NOT MATCHED
	WHEN NOT MATCHED THEN
    INSERT ([PartNumber]
			,[OriginalPrice]
			,[NormalizedPrice]
			,[StartsOn]
			,[EDWSourceSystemID]
			,[BillableItemId]
			,[EDWLastUpdated]
			,[ModifiedOn]
			,[Price]
			,[AdjustmentType]
			,[Comments]
			,[SourceTypeId]
			,[EDWIsDeletedFlag]
			,[EnrollmentId]
			,[CreatedOn]
			,[EndsOn]
			,[EDWProcessID]
			,[TierType]
			,[ModifiedBy]
			,[Id]
			,[EDWFirstInserted]
			,[CurrencyId]
			,[EDWSourceExtractID]
			,[SourceKey]
			,[BillableItemType]
			,[EDWExtractGrouping]
			,[CreatedBy])
    VALUES (source.[PartNumber]
			,source.[OriginalPrice]
			,source.[NormalizedPrice]
			,source.[StartsOn]
			,source.[EDWSourceSystemID]
			,source.[BillableItemId]
			,source.[EDWLastUpdated]
			,source.[ModifiedOn]
			,source.[Price]
			,source.[AdjustmentType]
			,source.[Comments]
			,source.[SourceTypeId]
			,source.[EDWIsDeletedFlag]
			,source.[EnrollmentId]
			,source.[CreatedOn]
			,source.[EndsOn]
			,source.[EDWProcessID]
			,source.[TierType]
			,source.[ModifiedBy]
			,source.[Id]
			,source.[EDWFirstInserted]
			,source.[CurrencyId]
			,source.[EDWSourceExtractID]
			,source.[SourceKey]
			,source.[BillableItemType]
			,source.[EDWExtractGrouping]
			,source.[CreatedBy]
			);
	


RETURN 0
